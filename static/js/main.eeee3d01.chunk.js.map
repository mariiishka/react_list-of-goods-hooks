{"version":3,"sources":["enums/SortBy.ts","components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["SortBy","options","Array","from","length","_","i","GoodsList","goods","useState","isReversed","setReverse","wordMinLength","setWordMinLength","none","sortBy","setSortBy","toSortBy","sortType","currentGoods","filter","good","sort","a","b","alph","localeCompare","reverse","createCurrentGoods","className","type","onClick","current","name","id","value","onChange","target","Number","map","option","index","goodsFromServer","App","isStarted","setStart","ReactDOM","render","document","getElementById"],"mappings":"wJAAYA,E,6CAAAA,O,eAAAA,I,eAAAA,I,oBAAAA,M,gBCGNC,EAAoBC,MAAMC,KAAK,CAAEC,OAAQ,KAAM,SAACC,EAAGC,GAAJ,OAAUA,EAAI,KAMtDC,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,EAAiCC,oBAAS,GAA1C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA0CF,mBAAS,GAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAA4BJ,mBAAST,EAAOc,MAA5C,mBAAOC,EAAP,KAAeC,EAAf,KAUMC,EAAW,SAACC,GAChBF,EAAUE,IA8BNC,EArBqB,WACzB,IAAMA,EAAeX,EAAMY,QAAO,SAAAC,GAAI,OAAIA,EAAKjB,QAAUQ,KAiBzD,OAfAO,EAAaG,MAAK,SAACC,EAAGC,GACpB,OAAQT,GACN,KAAKf,EAAOyB,KACV,OAAOF,EAAEG,cAAcF,GACzB,KAAKxB,EAAOI,OACV,OAAOmB,EAAEnB,OAASoB,EAAEpB,OACtB,QACE,OAAO,MAITM,GACFS,EAAaQ,UAGRR,EAGYS,GAErB,OACE,sBAAKC,UAAU,aAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,wBACEA,UAAU,SACVC,KAAK,SACLC,QA/CQ,WACdpB,GAAW,SAACqB,GAAD,OAAcA,MA2CrB,qBAQA,wBACEH,UAAU,SACVC,KAAK,SACLC,QAAS,WACPd,EAASjB,EAAOyB,OAJpB,iCAUA,wBACEI,UAAU,SACVC,KAAK,SACLC,QAAS,WACPd,EAASjB,EAAOI,SAJpB,4BAUA,wBACE6B,KAAK,gBACLC,GAAG,gBACHC,MAAOvB,EACPwB,SAAU,YAAiB,IAxEhBD,EAwEEE,EAAa,EAAbA,OAxEFF,EAyECG,OAAOD,EAAOF,OAxEhCtB,EAAiBsB,IAmEb,SAQGlC,EAAQsC,KAAI,SAAAC,GAAM,OACjB,wBAAqBL,MAAOK,EAA5B,SACGA,GADUA,QAMjB,wBACEX,UAAU,SACVC,KAAK,SACLC,QA9EM,WACZpB,GAAW,GACXE,EAAiB,GACjBG,EAAUhB,EAAOc,OAwEb,sBAQF,oBAAIe,UAAU,mBAAd,SACGV,EAAaoB,KAAI,SAAClB,EAAMoB,GAAP,OAChB,oBAAeZ,UAAU,mBAAzB,SACE,uCACMY,EAAQ,EADd,aACoBpB,MAFbA,YC3GbqB,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA8BaC,EA3BO,WACpB,MAA8BlC,oBAAS,GAAvC,mBAAOmC,EAAP,KAAkBC,EAAlB,KAMA,OACE,sBAAKhB,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,mBACCe,EAEG,cAAC,EAAD,CAAWpC,MAAOkC,IAGlB,wBACEZ,KAAK,SACLD,UAAU,qBACVE,QAfS,WACjBc,GAAS,IAWH,uBC7BVC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.eeee3d01.chunk.js","sourcesContent":["export enum SortBy {\n  none,\n  alph,\n  length,\n}\n","import React, { useState } from 'react';\nimport { SortBy } from '../../enums/SortBy';\n\nconst options: number[] = Array.from({ length: 10 }, (_, i) => i + 1);\n\ninterface Props {\n  goods: string[];\n}\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  const [isReversed, setReverse] = useState(false);\n  const [wordMinLength, setWordMinLength] = useState(1);\n  const [sortBy, setSortBy] = useState(SortBy.none);\n\n  const reverse = () => {\n    setReverse((current) => !current);\n  };\n\n  const setLength = (value: number) => {\n    setWordMinLength(value);\n  };\n\n  const toSortBy = (sortType: SortBy) => {\n    setSortBy(sortType);\n  };\n\n  const reset = () => {\n    setReverse(false);\n    setWordMinLength(1);\n    setSortBy(SortBy.none);\n  };\n\n  const createCurrentGoods = () => {\n    const currentGoods = goods.filter(good => good.length >= wordMinLength);\n\n    currentGoods.sort((a, b) => {\n      switch (sortBy) {\n        case SortBy.alph:\n          return a.localeCompare(b);\n        case SortBy.length:\n          return a.length - b.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      currentGoods.reverse();\n    }\n\n    return currentGoods;\n  };\n\n  const currentGoods = createCurrentGoods();\n\n  return (\n    <div className=\"goods-list\">\n      <div className=\"goods-list__settings\">\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={() => {\n            toSortBy(SortBy.alph);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={() => {\n            toSortBy(SortBy.length);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <select\n          name=\"select-length\"\n          id=\"select-length\"\n          value={wordMinLength}\n          onChange={({ target }) => {\n            setLength(Number(target.value));\n          }}\n        >\n          {options.map(option => (\n            <option key={option} value={option}>\n              {option}\n            </option>\n          ))}\n        </select>\n\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={reset}\n        >\n          Reset\n        </button>\n      </div>\n      <ul className=\"goods-list__list\">\n        {currentGoods.map((good, index) => (\n          <li key={good} className=\"goods-list__item\">\n            <h3>\n              {`${index + 1}. ${good}`}\n            </h3>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [isStarted, setStart] = useState(false);\n\n  const getStarted = () => {\n    setStart(true);\n  };\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"app__title\">Goods</h1>\n      {isStarted\n        ? (\n          <GoodsList goods={goodsFromServer} />\n        )\n        : (\n          <button\n            type=\"button\"\n            className=\"button app__button\"\n            onClick={getStarted}\n          >\n            Start\n          </button>\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}