{"version":3,"sources":["components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["options","GoodsList","goods","useState","isReversed","setReverse","wordMinLength","setWordMinLength","sortBy","setSortBy","currentGoods","filter","good","length","sort","a","b","localeCompare","reverse","className","type","onClick","current","name","id","value","onChange","target","map","option","index","goodsFromServer","App","isStarted","setStart","ReactDOM","render","document","getElementById"],"mappings":"oMAEMA,EAAoB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAMzCC,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,EAAiCC,oBAAS,GAA1C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA0CF,mBAAS,GAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAA4BJ,mBAAS,QAArC,mBAAOK,EAAP,KAAeC,EAAf,KAwBMC,EAAeR,EAAMS,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUP,KAiBzD,OAfAI,EAAaI,MAAK,SAACC,EAAGC,GACpB,OAAQR,GACN,IAAK,OACH,OAAOO,EAAEE,cAAcD,GACzB,IAAK,SACH,OAAOD,EAAEF,OAASG,EAAEH,OACtB,QACE,OAAO,MAITT,GACFM,EAAaQ,UAIb,sBAAKC,UAAU,aAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,wBACEA,UAAU,SACVC,KAAK,SACLC,QA7CQ,WACdhB,GAAW,SAACiB,GAAD,OAAcA,MAyCrB,qBAQA,wBACEH,UAAU,SACVC,KAAK,SACLC,QA7CW,WACjBZ,EAAU,SAyCN,iCAQA,wBACEU,UAAU,SACVC,KAAK,SACLC,QAjDa,WACnBZ,EAAU,WA6CN,4BAQA,wBACEc,KAAK,gBACLC,GAAG,gBACHC,MAAOnB,EACPoB,SAAU,YAAiB,IAlEhBD,EAkEEE,EAAa,EAAbA,OAlEFF,GAmEEE,EAAOF,MAlE1BlB,EAAiBkB,IA6Db,SAQGzB,EAAQ4B,KAAI,SAAAC,GAAM,OACjB,wBAAqBJ,MAAOI,EAA5B,SACGA,GADUA,QAMjB,wBACEV,UAAU,SACVC,KAAK,SACLC,QApEM,WACZhB,GAAW,GACXE,EAAiB,GACjBE,EAAU,SA8DN,sBAQF,oBAAIU,UAAU,mBAAd,SACGT,EAAakB,KAAI,SAAChB,EAAMkB,GAAP,OAChB,oBAAeX,UAAU,mBAAzB,SACE,uCACMW,EAAQ,EADd,aACoBlB,MAFbA,YCpGbmB,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA8BaC,EA3BO,WACpB,MAA8B7B,oBAAS,GAAvC,mBAAO8B,EAAP,KAAkBC,EAAlB,KAMA,OACE,sBAAKf,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,mBACCc,EAEG,cAAC,EAAD,CAAW/B,MAAO6B,IAGlB,wBACEX,KAAK,SACLD,UAAU,qBACVE,QAfS,WACjBa,GAAS,IAWH,uBC7BVC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.eb1b9735.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst options: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\ninterface Props {\n  goods: string[];\n}\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  const [isReversed, setReverse] = useState(false);\n  const [wordMinLength, setWordMinLength] = useState(1);\n  const [sortBy, setSortBy] = useState('none');\n\n  const reverse = () => {\n    setReverse((current) => !current);\n  };\n\n  const setLength = (value: number) => {\n    setWordMinLength(value);\n  };\n\n  const sortByAlph = () => {\n    setSortBy('alph');\n  };\n\n  const sortByLength = () => {\n    setSortBy('length');\n  };\n\n  const reset = () => {\n    setReverse(false);\n    setWordMinLength(1);\n    setSortBy('none');\n  };\n\n  const currentGoods = goods.filter(good => good.length >= wordMinLength);\n\n  currentGoods.sort((a, b) => {\n    switch (sortBy) {\n      case 'alph':\n        return a.localeCompare(b);\n      case 'length':\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    currentGoods.reverse();\n  }\n\n  return (\n    <div className=\"goods-list\">\n      <div className=\"goods-list__settings\">\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={sortByAlph}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <select\n          name=\"select-length\"\n          id=\"select-length\"\n          value={wordMinLength}\n          onChange={({ target }) => {\n            setLength(+target.value);\n          }}\n        >\n          {options.map(option => (\n            <option key={option} value={option}>\n              {option}\n            </option>\n          ))}\n        </select>\n\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={reset}\n        >\n          Reset\n        </button>\n      </div>\n      <ul className=\"goods-list__list\">\n        {currentGoods.map((good, index) => (\n          <li key={good} className=\"goods-list__item\">\n            <h3>\n              {`${index + 1}. ${good}`}\n            </h3>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [isStarted, setStart] = useState(false);\n\n  const getStarted = () => {\n    setStart(true);\n  };\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"app__title\">Goods</h1>\n      {isStarted\n        ? (\n          <GoodsList goods={goodsFromServer} />\n        )\n        : (\n          <button\n            type=\"button\"\n            className=\"button app__button\"\n            onClick={getStarted}\n          >\n            Start\n          </button>\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}